C:\Users\Adam\Desktop\jeep_2.5L\SBEC_utils\SBEC_erase_st\erase_st.lst - generated by MGTEK Assembler ASM11 V1.26 Build 144 for WIN32 (x86) - Tue Dec 28 14:53:50 2021

    1:                                 ; 68HC11 bootstrap, download to a SBEC that has been
    2:                                 ; placed into bootstrap mode by applying 12 volts to
    3:                                 ; pin 45 until SBEC sends 0x00 on pin 25.
    4:                                 
    5:          =00000000                  ORG $0000
    6:                                 
    7:     0000                        THE_BEGIN:
    8:     0000                        Start:
    9:     0000 8E 00FF                    ldS     #$FF        ; stack pointer = 0xFF
   10:     0003 CE 1000                    ldX     #$1000      ; config 68HC11 registers
   11:     0006 CC 330C                    ldD     #$330C      ; config SCI
   12:     0009 A7 2B                      staA    $2B,X       ; store value in register A ($33) in 0x1000 + 0x002B
   13:                                                         ; configures SCI for 1200 BAUD
   14:     000B E7 2D                      staB    $2D,X       ; store value in register B ($0C) in 0x1000 + 0x002D
   15:                                                         ; configures SCI for TXD/RXD
   16:     000D 0F                         sei                 ; disable interupts
   17:     000E CC 6001                    ldD     #$6001      ; load D register with 0x6001
   18:     0011 A7 3C                      staA    $3C,X       ; store value in register A ($60) in 0x1000 + 0x003C
   19:                                                         ; enables Special Mode
   20:     0013 E7 3F                      staB    $3F,X       ; store valie in register B ($01) in 0x1000 + 0x003F
   21:                                                         ; System Config Register
   22:                                 
   23:                                 ; give receiver around 100ms to apply 20 volts to pin 45
   24:                                 
   25:     0015 CE 7E00                    ldX     #$7E00
   26:     0018                        Delay:
   27:     0018 09                         deX
   28:     0019 26 FD                      bne     Delay
   29:                                 
   30:     001B 18CE 0BB8                  ldY     #$0BB8                  
   31:     001F CE 8000                    ldX     #$8000                  
   32:                                 
   33:     0022                        SendEraseCommand:
   34:     0022 86 20                      ldaA    #$20                    
   35:     0024 A7 00                      staA    $00,X                   
   36:     0026 A7 00                      staA    $00,X                   
   37:     0028 3C                         pshX                            
   38:                                 
   39:     0029                        Delay120ms:
   40:     0029 CE 0FA0                    ldX     #$0FA0                  
   41:                                 
   42:     002C                        LongDelayLoop:
   43:     002C 09                         deX                             
   44:     002D 26 FD                      bne     LongDelayLoop           
   45:     002F 38                         pulX                            
   46:     0030 86 FF                      ldaA    #$FF                    
   47:                                 
   48:     0032                        EraseConfirmLoop:
   49:     0032 C6 A0                      ldaB    #$A0                    
   50:     0034 E7 00                      staB    $00,X                   
   51:                                 
   52:     0036 C6 02                      ldaB    #$02                    
   53:     0038                        wait:
   54:     0038 5A                         decB
   55:     0039 26 FD                      bne     wait
   56:     003B A1 00                      cmpa    $00,X               
   57:     003D 26 10                      bne     CheckEraseRetryCounter  
   58:     003F 08                         inx                             
   59:                                 
   60:     0040                        SkipEEPROM:
   61:     0040 8C B600                    cpx     #$b600
   62:     0043 26 03                      bne     Skip3                      ; branch if not equal (not zero)
   63:     0045 CE B800                    ldx     #$b800                     ; load index with value
   64:                                 
   65:     0048                        Skip3:  
   66:     0048 8C 0000                    cpx     #$0000
   67:     004B 26 E5                      bne     EraseConfirmLoop        
   68:     004D 20 04                      bra     JumpToStart             
   69:                                 
   70:     004F                        CheckEraseRetryCounter:
   71:     004F 1809                       deY                             
   72:     0051 26 CF                      bne     SendEraseCommand        
   73:                                 
   74:     0053                        JumpToStart:
   75:     0053 CE 8000                    ldX     #$8000      ; load the start address in register X
   76:                                 
   77:     0056                        SendByte:
   78:     0056 E6 00                      ldaB    0,X         ; load byte at address X+0
   79:                                 
   80:     0058                        WaitForSCI:
   81:     0058 B6 102E                    ldaA    $102E       ; check SCI status
   82:     005B 84 80                      andA    #%10000000  ; check if ready to send
   83:     005D 27 F9                      beq     WaitForSCI  ; loop until ready
   84:     005F F7 102F                    staB    $102F       ; send byte to SCI
   85:     0062 08                         inX                 ; point X to next byte
   86:     0063 26 F1                      bne     SendByte    ; loop until X = 0x0000
   87:     0065 CF                         stop
   88:                                 
   89:     0066                        THE_END:
   90:                                 
   91:                                                         ; pad bootstrap to 256 total bytes
   92:                                  REPEAT 256-(THE_END-THE_BEGIN)
   93:                                     fcb 0x00
   94:                                  ENDR

Symbols:
checkeraseretrycounter          *0000004f
delay                           *00000018
eraseconfirmloop                *00000032
jumptostart                     *00000053
longdelayloop                   *0000002c
sendbyte                        *00000056
senderasecommand                *00000022
skip3                           *00000048
the_begin                       *00000000
the_end                         *00000066
wait                            *00000038
waitforsci                      *00000058

