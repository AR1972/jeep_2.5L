C:\Users\Adam\Desktop\jeep_2.5L\SBEC_utils\SBEC_chipid\chipid.lst - generated by MGTEK Assembler ASM11 V1.26 Build 144 for WIN32 (x86) - Tue Dec 28 13:04:50 2021

    1:                                 ; 68HC11 bootstrap, download to a SBEC that has been
    2:                                 ; placed into bootstrap mode by applying 12 volts to
    3:                                 ; pin 45 until SBEC sends 0x00 on pin 25.
    4:                                 
    5:          =00000000                  ORG $0000
    6:                                 
    7:     0000                        THE_BEGIN:
    8:                                 
    9:     0000                        Start:
   10:     0000 8E 00FF                    ldS     #$FF        ; stack pointer = 0xFF
   11:     0003 CE 1000                    ldX     #$1000      ; config 68HC11 registers
   12:     0006 CC 330C                    ldD     #$330C      ; config SCI
   13:     0009 A7 2B                      staA    $2B,X       ; store value in register A ($33) in 0x1000 + 0x002B
   14:                                                         ; configures SCI for 1200 BAUD
   15:     000B E7 2D                      staB    $2D,X       ; store value in register B ($0C) in 0x1000 + 0x002D
   16:                                                         ; configures SCI for TXD/RXD
   17:     000D 0F                         sei                 ; disable interrupts
   18:     000E CC 6001                    ldD     #$6001      ; load D register with 0x6001
   19:     0011 A7 3C                      staA    $3C,X       ; store value in register A ($60) in 0x1000 + 0x003C
   20:                                                         ; enables Special Mode
   21:     0013 E7 3F                      staB    $3F,X       ; store value in register B ($01) in 0x1000 + 0x003F
   22:                                                         ; System Config Register
   23:                                 
   24:                                 ; give receiver around 100ms too apply 20 volts to pin 45
   25:                                 
   26:     0015 CE 7E00                   ldX      #$7E00      ;100ms
   27:     0018 9D 45                     jsr      wait
   28:                                 
   29:     001A CC AA90                   ldD      #$AA90
   30:     001D B7 D555                   staA     $D555       ; store $AA at address $D555 
   31:     0020 43                        comA                 ; $AA is now $55
   32:     0021 B7 AAAA                   staA     $AAAA       ; store $55 in address $AAAA
   33:     0024 F7 D555                   staB     $D555       ; store $90 in address $D555
   34:                                 
   35:     0027 CE 014D                   ldX      #$014D      ; 1msec
   36:     002A 9D 45                     jsr      wait
   37:                                 
   38:     002C FC A000                   ldD      $A000       ; ID should now be at $A000
   39:     002F DD 49                     stD      mfg_id      ; copy ID from address to ram
   40:                                 
   41:     0031 D6 49                     ldaB     mfg_id      ; send manufacture id to PC
   42:     0033 9D 3A                     jsr      send
   43:                                 
   44:     0035 D6 4A                     ldaB     chp_id      ; send chip id to PC
   45:     0037 9D 3A                     jsr      send
   46:     0039 CF                        stop
   47:                                 
   48:     003A                        send:
   49:     003A B6 102E                   ldaA     $102E
   50:     003D 84 80                     andA     #%10000000
   51:     003F 27 F9                     beq      send
   52:     0041 F7 102F                   staB     $102F
   53:     0044 39                        rts
   54:                                 
   55:     0045                        wait:
   56:     0045 09                        deX
   57:     0046 26 FD                     bne      wait
   58:     0048 39                        rts
   59:                                 
   60:     0049 AA                     mfg_id fcb $AA
   61:     004A AA                     chp_id fcb $AA
   62:                                 
   63:     004B                        THE_END:
   64:                                 
   65:                                                         ; pad bootstrap to 256 total bytes
   66:                                  REPEAT 256-(THE_END-THE_BEGIN)
   67:                                     fcb 0x00
   68:                                  ENDR

Symbols:
chp_id                          *0000004a
mfg_id                          *00000049
send                            *0000003a
the_begin                       *00000000
the_end                         *0000004b
wait                            *00000045

